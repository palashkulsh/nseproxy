-Tells which stocks have positive change in close price over a period
select symbol,avg(100*(close_price-prev_close)/prev_close) as avg_growth,min(100*(close_price-prev_close)/prev_close) as min, max(100*(close_price-prev_close)/prev_close) as max from stock_data where date between '2016-09-20' and '2016-10-04' and average_price>10 group by symbol having max>0 and min > 0 order by avg_growth;

-last 3 days positive
select symbol,avg(100*(close_price-prev_close)/prev_close) as avg_growth,min(100*(close_price-prev_close)/prev_close) as min, max(100*(close_price-prev_close)/prev_close) as max from stock_data where date between date_sub(curdate(),interval 3 day ) and  curdate() and average_price>10 group by symbol having max>0 and min > 0 order by avg_growth;

-- select symbol,avg(100*(close_price-prev_close)/prev_close) as avg_growth,min(100*(close_price-prev_close)/prev_close) as min, max(100*(close_price-prev_close)/prev_close) as max from stock_data where date between date_sub(date_sub(curdate(),interval 2 day),interval 1 day ) and date_sub(curdate(),interval 3 day)  and average_price>10 group by symbol having max>0 and min > 0 order by avg_growth;

-financial details for a given symbol
select distinct f.symbol,f.key_text,f16.value as '2016',f15.value as '2015',f14.value as '2014',f13.value as '2013',f12.value as '2012',f11.value as '2011',f10.value as '2010' from fin as f left outer join fin as f16 on f.symbol=f16.symbol and f.key_text=f16.key_text and f16.year=2016 left outer join fin as f15 on f.symbol=f15.symbol and f.key_text=f15.key_text and f15.year=2015 left outer join fin as f14 on f.symbol=f14.symbol and f.key_text=f14.key_text and f14.year=2014 left outer join fin as f13 on f.symbol=f13.symbol and f.key_text=f13.key_text and f13.year=2013  left outer join fin as f12 on f.symbol=f12.symbol and f.key_text=f12.key_text and f12.year=2012 left outer join fin as f11 on f.symbol=f11.symbol and f.key_text=f11.key_text and f11.year=2011  left outer join fin as f10 on f.symbol=f10.symbol and f.key_text=f10.key_text and f10.year=2010   where f.symbol='PNB'

-financial details for upto 2004
select distinct f.symbol,f.key_text,f16.value as '2016',f15.value as '2015',f14.value as '2014',f13.value as '2013',f12.value as '2012',f11.value as '2011',f10.value as '2010' , f09.value as '2009',f08.value as '2008',f07.value as '2007',f06.value as '2006',f05.value as '2005',f04.value as '2004' from fin as f left outer join fin as f16 on f.symbol=f16.symbol and f.key_text=f16.key_text and f16.year=2016 left outer join fin as f15 on f.symbol=f15.symbol and f.key_text=f15.key_text and f15.year=2015 left outer join fin as f14 on f.symbol=f14.symbol and f.key_text=f14.key_text and f14.year=2014 left outer join fin as f13 on f.symbol=f13.symbol and f.key_text=f13.key_text and f13.year=2013  left outer join fin as f12 on f.symbol=f12.symbol and f.key_text=f12.key_text and f12.year=2012 left outer join fin as f11 on f.symbol=f11.symbol and f.key_text=f11.key_text and f11.year=2011  left outer join fin as f10 on f.symbol=f10.symbol and f.key_text=f10.key_text and f10.year=2010 left outer join fin as f09 on f.symbol=f09.symbol and f.key_text=f09.key_text and f09.year=2009 left outer join fin as f08 on f.symbol=f08.symbol and f.key_text=f08.key_text and f08.year=2008 left outer join fin as f07 on f.symbol=f07.symbol and f.key_text=f07.key_text and f07.year=2007 left outer join fin as f06 on f.symbol=f06.symbol and f.key_text=f06.key_text and f06.year=2006 left outer join fin as f05 on f.symbol=f05.symbol and f.key_text=f05.key_text and f05.year=2005 left outer join fin as f04 on f.symbol=f04.symbol and f.key_text=f04.key_text and f04.year=2004   where f.symbol='PNB';

-interpreting ratios
select distinct f.symbol,f.key_text,f16.value as '2016',f15.value as '2015',f14.value as '2014',f13.value as '2013',f12.value as '2012',f11.value as '2011',f10.value as '2010' from fin as f left outer join fin as f16 on f.symbol=f16.symbol and f.key_text=f16.key_text and f16.year=2016 left outer join fin as f15 on f.symbol=f15.symbol and f.key_text=f15.key_text and f15.year=2015 left outer join fin as f14 on f.symbol=f14.symbol and f.key_text=f14.key_text and f14.year=2014 left outer join fin as f13 on f.symbol=f13.symbol and f.key_text=f13.key_text and f13.year=2013  left outer join fin as f12 on f.symbol=f12.symbol and f.key_text=f12.key_text and f12.year=2012 left outer join fin as f11 on f.symbol=f11.symbol and f.key_text=f11.key_text and f11.year=2011  left outer join fin as f10 on f.symbol=f10.symbol and f.key_text=f10.key_text and f10.year=2010   where f.symbol='PNB'


-also adding 52 week low
select temp.symbol,temp.avg_growth,temp.min,temp.max,temp.avgprice,yearlow.low52,yearlow.max52 from (select symbol,avg(100*(close_price-prev_close)/prev_close) as avg_growth,min(100*(close_price-prev_close)/prev_close) as min, max(100*(close_price-prev_close)/prev_close) as max ,avg(close_price) as avgprice from stock_data where date between  date_sub(curdate(),interval 5 day ) and  curdate() and average_price>10 group by symbol having max>0 and min > -2.0 and abs(max)>abs(min) order by avg_growth)temp inner join (select symbol,min(close_price) as low52 , max(close_price) as max52 from stock_data where date>date_sub(curdate(),interval 1 year) and date<=curdate() group by symbol ) yearlow on temp.symbol=yearlow.symbol where yearlow.max52-temp.avgprice>2*(temp.avgprice-yearlow.low52) order by avgprice;

()52 high low in a period
select hl.symbol,hl.52high,hl.52low,sdh.date as highdate,sdl.date as lowdate from (select symbol, min(average_price) as 52low,max(average_price) 52high from stock_data where series='eq' and date between  date_sub(curdate(),interval 1 year ) and  curdate() and symbol='agarind' group by symbol )hl inner join stock_data sdh on sdh.symbol=hl.symbol and hl.52high=sdh.average_price inner join stock_data sdl on hl.symbol=sdl.symbol and hl.52low=sdl.average_price and sdl.series='eq';

()52 low in a period (15 days)
select hl.symbol,hl.52low,sdl.date as lowdate from (select symbol, min(average_price) as 52low,max(average_price) 52high from stock_data where series='eq' and date between  date_sub(curdate(),interval 1 year ) and  curdate()  group by symbol )hl  inner join stock_data sdl on hl.symbol=sdl.symbol and hl.52low=sdl.average_price and sdl.series='eq' and sdl.date between date_sub(curdate(),interval 15 day) and curdate();

()52 low in a period with current value
select hl.symbol,hl.52low,sdl.date as lowdate,hl.maxdate,sdc.average_price as curprice,(sdc.average_price-hl.52low)/hl.52low*100 as rec from (select symbol, min(average_price) as 52low,max(average_price) 52high,max(date) maxdate from stock_data where series='eq' and date between  date_sub(curdate(),interval 1 year ) and  curdate()  group by symbol )hl  inner join stock_data sdl on hl.symbol=sdl.symbol and hl.52low=sdl.average_price and sdl.series='eq' inner join  stock_data  sdc on sdc.symbol=hl.symbol and sdc.series='eq'  and sdc.date = hl.maxdate where sdl.date   between date_sub(curdate(),interval 15 day) and (curdate(),interval 10 day) ;

() 52 low with recovery
select hl.symbol,hl.52low,sdl.date as lowdate,hl.maxdate,sdc.average_price as curprice,(sdc.average_price-hl.52low)/hl.52low*100 as rec from (select symbol, min(average_price) as 52low,max(average_price) 52high,max(date) maxdate from stock_data where series='eq' and date between  date_sub(curdate(),interval 1 year ) and  curdate()  group by symbol )hl  inner join stock_data sdl on hl.symbol=sdl.symbol and hl.52low=sdl.average_price and sdl.series='eq' inner join  stock_data  sdc on sdc.symbol=hl.symbol and sdc.series='eq'  and sdc.date = hl.maxdate where sdl.date   between date_sub(curdate(),interval 15 day) and date_sub(curdate(),interval 10 day) order by rec;

() all share EPS
select distinct f.symbol,f.key_text,f16.value as y2016,f15.value as y2015,f14.value as y2014,f13.value as y2013,f12.value as y2012,f11.value as y2011,f10.value as y2010 , f09.value as y2009,f08.value as y2008,f07.value as y2007,f06.value as y2006,f05.value as y2005,f04.value as y2004 from fin as f left outer join fin as f16 on f.symbol=f16.symbol and f.key_text=f16.key_text and f16.year=2016 left outer join fin as f15 on f.symbol=f15.symbol and f.key_text=f15.key_text and f15.year=2015 left outer join fin as f14 on f.symbol=f14.symbol and f.key_text=f14.key_text and f14.year=2014 left outer join fin as f13 on f.symbol=f13.symbol and f.key_text=f13.key_text and f13.year=2013  left outer join fin as f12 on f.symbol=f12.symbol and f.key_text=f12.key_text and f12.year=2012 left outer join fin as f11 on f.symbol=f11.symbol and f.key_text=f11.key_text and f11.year=2011  left outer join fin as f10 on f.symbol=f10.symbol and f.key_text=f10.key_text and f10.year=2010 left outer join fin as f09 on f.symbol=f09.symbol and f.key_text=f09.key_text and f09.year=2009 left outer join fin as f08 on f.symbol=f08.symbol and f.key_text=f08.key_text and f08.year=2008 left outer join fin as f07 on f.symbol=f07.symbol and f.key_text=f07.key_text and f07.year=2007 left outer join fin as f06 on f.symbol=f06.symbol and f.key_text=f06.key_text and f06.year=2006 left outer join fin as f05 on f.symbol=f05.symbol and f.key_text=f05.key_text and f05.year=2005 left outer join fin as f04 on f.symbol=f04.symbol and f.key_text=f04.key_text and f04.year=2004   where f.key_text='Basic EPS (Rs.)' order by y2016,y2015,y2014;

() all +ve PE for 16,15,14
select symbol,avg,pe16,pe15,pe14 from (select fi.symbol,sd.average_price as avg,sd.average_price/fi.y2016 as pe16,sd.average_price/fi.y2015 as pe15,sd.average_price/fi.y2014 as pe14 from (select distinct f.symbol,f.key_text,f16.value as y2016,f15.value as y2015,f14.value as y2014,f13.value as y2013,f12.value as y2012,f11.value as y2011,f10.value as y2010 , f09.value as y2009,f08.value as y2008,f07.value as y2007,f06.value as y2006,f05.value as y2005,f04.value as y2004 from fin as f left outer join fin as f16 on f.symbol=f16.symbol and f.key_text=f16.key_text and f16.year=2016 left outer join fin as f15 on f.symbol=f15.symbol and f.key_text=f15.key_text and f15.year=2015 left outer join fin as f14 on f.symbol=f14.symbol and f.key_text=f14.key_text and f14.year=2014 left outer join fin as f13 on f.symbol=f13.symbol and f.key_text=f13.key_text and f13.year=2013  left outer join fin as f12 on f.symbol=f12.symbol and f.key_text=f12.key_text and f12.year=2012 left outer join fin as f11 on f.symbol=f11.symbol and f.key_text=f11.key_text and f11.year=2011  left outer join fin as f10 on f.symbol=f10.symbol and f.key_text=f10.key_text and f10.year=2010 left outer join fin as f09 on f.symbol=f09.symbol and f.key_text=f09.key_text and f09.year=2009 left outer join fin as f08 on f.symbol=f08.symbol and f.key_text=f08.key_text and f08.year=2008 left outer join fin as f07 on f.symbol=f07.symbol and f.key_text=f07.key_text and f07.year=2007 left outer join fin as f06 on f.symbol=f06.symbol and f.key_text=f06.key_text and f06.year=2006 left outer join fin as f05 on f.symbol=f05.symbol and f.key_text=f05.key_text and f05.year=2005 left outer join fin as f04 on f.symbol=f04.symbol and f.key_text=f04.key_text and f04.year=2004   where f.key_text='Basic EPS (Rs.)' )fi inner join stock_data sd on sd.symbol=fi.symbol and sd.date=date_sub(curdate(),interval 1 day) and sd.series='eq'   )cal where pe16>0 and pe15>0 and pe14>0 order by pe16 desc,pe15 desc;

() stocks less than book value ==> replace(replace(key_text," ",""),".","") [not yet complete]
select distinct f.symbol,replace(replace(f.key_text," ",""),".","") as kt,f16.value as y2016,f15.value as y2015,f14.value as y2014,f13.value as y2013,f12.value as y2012,f11.value as y2011,f10.value as y2010 , f09.value as y2009,f08.value as y2008,f07.value as y2007,f06.value as y2006,f05.value as y2005,f04.value as y2004 from fin as f left outer join fin as f16 on f.symbol=f16.symbol and f.key_text=f16.key_text and f16.year=2016 left outer join fin as f15 on f.symbol=f15.symbol and f.key_text=f15.key_text and f15.year=2015 left outer join fin as f14 on f.symbol=f14.symbol and f.key_text=f14.key_text and f14.year=2014 left outer join fin as f13 on f.symbol=f13.symbol and f.key_text=f13.key_text and f13.year=2013  left outer join fin as f12 on f.symbol=f12.symbol and f.key_text=f12.key_text and f12.year=2012 left outer join fin as f11 on f.symbol=f11.symbol and f.key_text=f11.key_text and f11.year=2011  left outer join fin as f10 on f.symbol=f10.symbol and f.key_text=f10.key_text and f10.year=2010 left outer join fin as f09 on f.symbol=f09.symbol and f.key_text=f09.key_text and f09.year=2009 left outer join fin as f08 on f.symbol=f08.symbol and f.key_text=f08.key_text and f08.year=2008 left outer join fin as f07 on f.symbol=f07.symbol and f.key_text=f07.key_text and f07.year=2007 left outer join fin as f06 on f.symbol=f06.symbol and f.key_text=f06.key_text and f06.year=2006 left outer join fin as f05 on f.symbol=f05.symbol and f.key_text=f05.key_text and f05.year=2005 left outer join fin as f04 on f.symbol=f04.symbol and f.key_text=f04.key_text and f04.year=2004   where replace(replace(f.key_text," ",""),".","")='Price/BV(X)' and f16.value is not null and f15.value is not null order by f16.value  is not null  limit 10;


52 week low in past week
select symbol,min(average_price) as 52l,strvalformin(average_price,date) as 52ldt,realvalfordatemax(year(date),month(date),dayofmonth(date),average_price) as lastprice from stock_data force index( `idx_date`) where date between date_sub(curdate(),interval 1 year) and curdate() and series='EQ' group by symbol having strvalformin(average_price,date) between date_sub(curdate(),interval 7 day) and date_sub(curdate(),interval 0 day);

52 week high in past week
select symbol,max(average_price) as 52h,strvalformax(average_price,date) as 52hdt,realvalfordatemax(year(date),month(date),dayofmonth(date),average_price) as lastprice from stock_data force index( `idx_date`) where date between date_sub(curdate(),interval 1 year) and curdate() and series='EQ' group by symbol having strvalformax(average_price,date) between date_sub(curdate(),interval 7 day) and date_sub(curdate(),interval 0 day);

sector wise holdings of stocks
select * from holdings where symbol in (select symbol from symbol_mc_map where industry=7);

->dividend details of companies over the years
select symbol ,type, count(1),group_concat(year(announcement)),group_concat(value_pcent) from dividend where symbol='vadilalind' group by symbol, type order by count(1);


--> dividend yield of the companies
select f.symbol,f.year,f.key_text,f.value,sd.average_price, f.value/sd.average_price*100 as div_yield from fin f inner join stock_data sd on sd.symbol=f.symbol where f.year=2016 and f.key_text='Dividend / Share(Rs.)' and sd.date='2016-03-01' and sd.series='EQ' order by f.value/sd.average_price*100 ;

--> month wise distribution of dividend announcement dates
select month(announcement),count(1) from dividend group by month(announcement) ;

--> sector wise bonus giving diistribution
select month(announcement),count(1) from dividend group by month(announcement) ;

--> sector wise dividend giving distribution
select industry,count(1),smm.name from dividend b inner join symbol_mc_map smm on b.symbol=smm.symbol group by industry order by count(1);

--> day wise distribution of ups and down and no change of all dates
select dayofweek(date),dayname(date),count(case when close_price-open_price>0 then 1 end) as upcount,count(case when close_price-open_price<0 then 1 end) as downcount,count(case when close_price-open_price=0 then 1 end) as nochange from stock_data group by dayname(date) order by dayofweek(date)

+-----------------+---------------+---------+-----------+----------+
| dayofweek(date) | dayname(date) | upcount | downcount | nochange |
+-----------------+---------------+---------+-----------+----------+
|               1 | Sunday        |    1561 |      1556 |      331 |
|               2 | Monday        |  346332 |    414990 |    50724 |
|               3 | Tuesday       |  337064 |    428847 |    51420 |
|               4 | Wednesday     |  344426 |    416818 |    51807 |
|               5 | Thursday      |  329200 |    424006 |    51718 |
|               6 | Friday        |  331241 |    417896 |    49447 |
|               7 | Saturday      |    7632 |      6949 |     1347 |
+-----------------+---------------+---------+-----------+----------+
7 rows in set (16.37 sec)
